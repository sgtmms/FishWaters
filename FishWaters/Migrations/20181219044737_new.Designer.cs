// <auto-generated />
using FishWaters.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FishWaters.Migrations
{
    [DbContext(typeof(FishWaterDbContext))]
    [Migration("20181219044737_new")]
    partial class @new
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FishWaters.Models.Fishtype", b =>
                {
                    b.Property<int>("FishtypeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FishtypeName")
                        .IsRequired();

                    b.HasKey("FishtypeID");

                    b.ToTable("Fishtypes");
                });

            modelBuilder.Entity("FishWaters.Models.FishWater", b =>
                {
                    b.Property<int>("WaterbodyID");

                    b.Property<int>("FishtypeID");

                    b.Property<int>("FishWaterID");

                    b.HasKey("WaterbodyID", "FishtypeID");

                    b.HasIndex("FishtypeID");

                    b.ToTable("FishWaters");
                });

            modelBuilder.Entity("FishWaters.Models.Waterbody", b =>
                {
                    b.Property<int>("WaterbodyID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Acres");

                    b.Property<string>("County")
                        .IsRequired();

                    b.Property<string>("LakeName")
                        .IsRequired();

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<string>("State")
                        .IsRequired();

                    b.HasKey("WaterbodyID");

                    b.ToTable("Waterbodies");
                });

            modelBuilder.Entity("FishWaters.Models.FishWater", b =>
                {
                    b.HasOne("FishWaters.Models.Fishtype", "Fishtype")
                        .WithMany("FishWaters")
                        .HasForeignKey("FishtypeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FishWaters.Models.Waterbody", "Waterbody")
                        .WithMany("FishWaters")
                        .HasForeignKey("WaterbodyID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
